
SCR # 25 ( TXT )
  0  ( FCOPY )
  1 
  2 
  3 : (WST) >R HERE 400 + OVER B/SCR
  4        * DUP R B/SCR * + SWAP
  5        R> ;
  6 
  7 : (>BC) HERE % 200 + % 127 1
  8         R/W (WST) >R DO DUP I
  9         1 R/W % 128 + LOOP DROP
 10         R> ;
 11 
 12 : (BC>) SWAP (WST) >R DO DUP I
 13         0 R/W % 128 + LOOP DROP
 14         % 127 BLOCK + SWAP
 15         HERE % 200 + + SWAP
 16         R> CMOVE % 127 DUP
 17         BLOCK SWAP 0 R/W ;
 18 
 19 
 20 
 21 
 22 
 23 
 24 
 25 
 26 
 27 
 28 
 29 
 30 
 31 

SCR # 26 ( TXT )
  0  ( Przerwanie VBI-0 )
  1 
  2  HEX
  3  NOINT LSB-MSB
  4  CODE LSB-MSB 1 ,X LDA,
  5       DEX, DEX, 0 ,X STA,
  6       0 # LDA, 3 ,X STA,
  7       1 ,X STA,
  8       NEXT JMP, C;
  9  CONINT
 10  : (VBI) -FIND IF DROP SWAP
 11      1+ ROT % 3 * + DUP >R 1+ !
 12       20 R> C! ELSE DROP
 13       ." ERROR VBI" ENDIF ;
 14 
 15  0 VARIABLE $VBI0 12  ALLOT
 16    $VBI0 DUP EA SWAP C! DUP 1+
 17    0F CMOVE
 18 
 19  : VBI0 $VBI0 (VBI) ;
 20  CODE (EX0) E45F JMP, C;
 21  5 VBI0 (EX0) 4C $VBI0 10 + C!
 22 
 23  CODE RUN-VBI0 XSAVE STX,
 24       $VBI0 1+ LSB-MSB # LDX,
 25       # LDY, 6 # LDA, E45C JSR,
 26       XSAVE LDX, NEXT JMP, C;
 27  CODE STOP-VBI0 XSAVE STX,
 28       E45F LSB-MSB # LDX,
 29       # LDY, 6 # LDA, E45C JSR,
 30       XSAVE LDX, NEXT JMP, C;
 31 

SCR # 27 ( TXT )
  0  ( Przerwanie VBI-1 )
  1 
  2  0 VARIABLE $VBI1 21 ALLOT
  3      $VBI1 DUP EA SWAP C! DUP 1+
  4      1F CMOVE
  5 
  6  : VBI1 $VBI1 (VBI) ;
  7  CODE (EX1) E462 JMP, C;
  8  0A VBI1 (EX1) 4C $VBI1 1+ 3 0A
  9  * + C!
 10  CODE RUN-VBI1 XSAVE STX,
 11        $VBI1 1+ LSB-MSB # LDX,
 12        # LDY,
 13        7 # LDA, E45C JSR,
 14        XSAVE LDX, NEXT JMP, C;
 15  CODE STOP-VBI1 XSAVE STX,
 16       E462 LSB-MSB # LDX, # LDY,
 17       7 # LDA, E45C JSR,
 18       XSAVE LDX, NEXT JMP, C;
 19 
 20 ( CODE MIGA 14 LDA, 10 # AND,
 21       .A LSR, .A LSR, .A LSR,
 22       02F3 STA, RTS, C;
 23  0 VBI1 MIGA                  )
 24 
 25 
 26 
 27 
 28 
 29 
 30 
 31  DECIMAL
